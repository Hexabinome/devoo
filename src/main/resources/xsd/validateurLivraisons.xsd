<?xml version="1.0" encoding="utf-8"?>
<xs:schema
    elementFormDefault="qualified"
    attributeFormDefault="qualified"
    xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <!-- Element racine "JourneeType" -->
    <xs:element name="JourneeType">
        <xs:complexType>
            <!-- Composé d'une seule séquence, avec un "Entrepot" et une "PlagesHoraires" -->
            <xs:sequence minOccurs="1" maxOccurs="1">
                <xs:element name="Entrepot" minOccurs="1" maxOccurs="1">
                    <xs:complexType>
                        <!-- Ayant strictement un seul attribut "adresse", entier non signé -->
                        <xs:attribute name="adresse" use="required" type="xs:unsignedInt"/>
                    </xs:complexType>
                </xs:element>
                <xs:element name="PlagesHoraires" type="plagesHorairesType" minOccurs="1" maxOccurs="1"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    
    <!-- Une "PlagesHoraires" est composée d'une séquence d'au moins une "Plage" -->
    <xs:complexType name="plagesHorairesType">
        <xs:sequence minOccurs="1" maxOccurs="1">
            <xs:element name="Plage" type="plageType" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Une "Plage" est composée d'une séquence d'un seul élément "Livraisons" -->
    <xs:complexType name="plageType">
        <xs:sequence minOccurs="1" maxOccurs="1">
            <!-- Cet élément contient une séquence d'au moins une "Livraison" -->
            <xs:element name="Livraisons" minOccurs="1" maxOccurs="1">
                <xs:complexType>
                    <xs:sequence minOccurs="1" maxOccurs="1">
                        <xs:element name="Livraison" type="livraisonType" minOccurs="1" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
                <!-- Dans un élément "Livraisons", les "id" des "Livraison" sont uniques -->
                <xs:unique name="livraisonIdUnique">
                    <xs:selector xpath="Livraison"/>
                    <xs:field xpath="@id"/>
                </xs:unique>
            </xs:element>
        </xs:sequence>
        <!-- Une "Plage" possède une heure de début et de fin -->
        <xs:attribute name="heureDebut" use="required" type="heure.devoo"/>
        <xs:attribute name="heureFin" use="required" type="heure.devoo"/>
    </xs:complexType>

    <!-- Une "Livraison" possède trois attributs obligatoire -->
    <xs:complexType name="livraisonType">
        <xs:attribute name="id" use="required" type="xs:unsignedInt"/>
        <xs:attribute name="client" use="required" type="xs:unsignedInt"/>
        <xs:attribute name="adresse" use="required" type="xs:unsignedInt"/>
    </xs:complexType>

    <!-- Le type xs:time par défaut, défini par la W3C; doit matcher exactement HH:mm:ss
    Or parfois, nos documents contiendront seulement H:m:s par exemple -->
    <xs:simpleType name="heure.devoo">
        <xs:restriction base="xs:token">
            <!-- Explication expression régulière :
            * Matching des heures : 
            ((2[0-3])|((0|1)?[0-9])) = soit on match :
                    (2[0-3])        = 20, 21, 22, 23. Soit (| == OR)  :
                    ((0|1)?[0-9])   = 10...19 ou 00...09 ou 0...9
            * Puis on match deux fois (== {2}) pour les minutes et secondes :
            ":" et
            [0-5]? un premier chiffre de 0 à 5, ou rien.
            [0-9] Puis un chiffre de 0 à 9
            -->
            <xs:pattern value="((2[0-3])|((0|1)?[0-9]))(:[0-5]?[0-9]){2}"/>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>
